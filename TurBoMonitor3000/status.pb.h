/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2-dev */

#ifndef PB_STATUS_PB_H_INCLUDED
#define PB_STATUS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _CpuStatus {
    int32_t cores;
    float cpuTotal;
    float core0;
    float core1;
    float core2;
    float core3;
    float core4;
    float core5;
    float core6;
    float core7;
    float core8;
    float core9;
    float core10;
    float core11;
    float mem_percent;
    float mem_total;
    float mem_available;
    float disk_percent;
    float net_up;
    float net_dw;
} CpuStatus;


/* Initializer values for message structs */
#define CpuStatus_init_default                   {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
#define CpuStatus_init_zero                      {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define CpuStatus_cores_tag                      1
#define CpuStatus_cpuTotal_tag                   2
#define CpuStatus_core0_tag                      3
#define CpuStatus_core1_tag                      4
#define CpuStatus_core2_tag                      5
#define CpuStatus_core3_tag                      6
#define CpuStatus_core4_tag                      7
#define CpuStatus_core5_tag                      8
#define CpuStatus_core6_tag                      9
#define CpuStatus_core7_tag                      10
#define CpuStatus_core8_tag                      11
#define CpuStatus_core9_tag                      12
#define CpuStatus_core10_tag                     13
#define CpuStatus_core11_tag                     14
#define CpuStatus_mem_percent_tag                15
#define CpuStatus_mem_total_tag                  16
#define CpuStatus_mem_available_tag              17
#define CpuStatus_disk_percent_tag               18
#define CpuStatus_net_up_tag                     19
#define CpuStatus_net_dw_tag                     20

/* Struct field encoding specification for nanopb */
#define CpuStatus_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, INT32,    cores,             1) \
X(a, STATIC,   REQUIRED, FLOAT,    cpuTotal,          2) \
X(a, STATIC,   REQUIRED, FLOAT,    core0,             3) \
X(a, STATIC,   REQUIRED, FLOAT,    core1,             4) \
X(a, STATIC,   REQUIRED, FLOAT,    core2,             5) \
X(a, STATIC,   REQUIRED, FLOAT,    core3,             6) \
X(a, STATIC,   REQUIRED, FLOAT,    core4,             7) \
X(a, STATIC,   REQUIRED, FLOAT,    core5,             8) \
X(a, STATIC,   REQUIRED, FLOAT,    core6,             9) \
X(a, STATIC,   REQUIRED, FLOAT,    core7,            10) \
X(a, STATIC,   REQUIRED, FLOAT,    core8,            11) \
X(a, STATIC,   REQUIRED, FLOAT,    core9,            12) \
X(a, STATIC,   REQUIRED, FLOAT,    core10,           13) \
X(a, STATIC,   REQUIRED, FLOAT,    core11,           14) \
X(a, STATIC,   REQUIRED, FLOAT,    mem_percent,      15) \
X(a, STATIC,   REQUIRED, FLOAT,    mem_total,        16) \
X(a, STATIC,   REQUIRED, FLOAT,    mem_available,    17) \
X(a, STATIC,   REQUIRED, FLOAT,    disk_percent,     18) \
X(a, STATIC,   REQUIRED, FLOAT,    net_up,           19) \
X(a, STATIC,   REQUIRED, FLOAT,    net_dw,           20)
#define CpuStatus_CALLBACK NULL
#define CpuStatus_DEFAULT NULL

extern const pb_msgdesc_t CpuStatus_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define CpuStatus_fields &CpuStatus_msg

/* Maximum encoded size of messages (where known) */
#define CpuStatus_size                           111

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
